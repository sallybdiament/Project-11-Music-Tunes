{"version":3,"sources":["pages/Carregando.jsx","services/userAPI.js","components/Header.jsx","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.jsx","pages/Album.jsx","pages/Favorites.jsx","pages/Login.jsx","pages/NotFound.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","services/searchAlbumsAPI.js","components/Card.jsx","pages/Search.jsx","App.js","index.js"],"names":["Carregando","React","Component","USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Header","state","headerName","isLoading","componentDidMount","a","result","setState","this","to","getMusics","id","fetch","request","json","requestJson","results","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","favorite","removeFavorite","onCheckboxChange","props","objeto","removeFromFavorite","favorita","trackName","previewUrl","console","log","src","controls","kind","htmlFor","type","checked","onChange","Album","musicsInfo","musics","match","idAlbum","params","music","i","favorites","musicsWithFavorite","map","temFavorita","some","artistName","collectionName","Favorites","favoriteSongsComFavTrue","Login","inputName","isSaveButtonDisabled","isLoggedIn","validate","length","onInputChange","event","target","value","handleClick","disabled","onClick","NotFound","Profile","userName","userEmail","userDescription","userImg","alt","ProfileEdit","isSavebuttonDisabled","resgatandoInfoUsuarios","history","push","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","artworkUrl100","releaseDate","trackCount","Card","imgUrl","Search","searchArtist","resultsAlbuns","handleShowAlbuns","prev","copySearchArtist","album","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b099e05.chunk.js","sourcesContent":["import React from 'react';\n\nclass Carregando extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-favorites\">\n        Carregando...\n      </div>\n    );\n  }\n}\n\nexport default Carregando;\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Carregando from '../pages/Carregando';\nimport { getUser } from '../services/userAPI';\n\nclass Header extends React.Component {\n  state = {\n    headerName: '',\n    isLoading: false,\n  }\n\n  componentDidMount = async () => {\n    const result = await getUser();\n    // console.log(result);\n    this.setState({ headerName: result.name });\n    this.setState({ isLoading: true });\n  };\n\n  render() {\n    const { headerName, isLoading } = this.state;\n    return (\n      <div data-testid=\"header-component\">\n        { !isLoading\n          ? <Carregando />\n          : (\n            <div>\n              <p data-testid=\"header-user-name\">\n                { headerName}\n              </p>\n              <h1>Trybe Tunes</h1>\n              <nav>\n                <Link to=\"/search\" data-testid=\"link-to-search\">Search</Link>\n                <Link to=\"/favorites\" data-testid=\"link-to-favorites\">Favorites</Link>\n                <Link to=\"/profile\" data-testid=\"link-to-profile\">Profile</Link>\n              </nav>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Carregando from '../pages/Carregando';\n\nclass MusicCard extends React.Component {\n  state = {\n    favorite: false,\n    isLoading: false,\n    removeFavorite: false,\n  }\n\n  onCheckboxChange = async () => {\n    this.setState({ isLoading: true });\n    const { favorite } = this.state;\n    const { objeto, removeFromFavorite } = this.props;\n    if (removeFromFavorite) {\n      await removeSong(objeto);\n      this.setState({ removeFavorite: true });\n    } else if (!favorite) {\n      // console.log(objeto.favorita);\n      await addSong(objeto);\n      this.setState({ isLoading: false });\n      this.setState({\n        favorite: true,\n      });\n    } else {\n      await removeSong(objeto);\n      this.setState({ isLoading: false });\n      this.setState({\n        favorite: false,\n      });\n    }\n  }\n\n  componentDidMount = () => {\n    const { objeto } = this.props;\n    if (objeto.favorita) {\n      this.setState({ favorite: true });\n    }\n  }\n\n  render() {\n    const { trackName, previewUrl, trackId } = this.props;\n    const { favorite, isLoading,\n      removeFavorite } = this.state;\n    console.log(this.props);\n    return (\n      <>\n        <p>Favoritas</p>\n        { removeFavorite\n          ? null\n          : (\n            <article>\n              <p>{trackName}</p>\n              <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n                <track kind=\"captions\" />\n                O seu navegador não suporta o elemento\n                {' '}\n                {' '}\n                <code>audio</code>\n                .\n              </audio>\n              <label htmlFor=\"favorite\">\n                Favorita\n                <input\n                  type=\"checkbox\"\n                  data-testid={ `checkbox-music-${trackId}` }\n                  name=\"favorite\"\n                  id=\"favorite\"\n                  checked={ favorite }\n                  onChange={ this.onCheckboxChange }\n                />\n              </label>\n              { isLoading && <Carregando /> }\n            </article>\n          )}\n      </>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n  trackId: PropTypes.number,\n  // favorita: PropTypes.bool,\n  objeto: PropTypes.shape({\n    trackId: PropTypes.number,\n    favorita: PropTypes.bool,\n  }),\n  removeFromFavorite: PropTypes.string,\n}.isRequired;\n\nexport default MusicCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Carregando from './Carregando';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Album extends React.Component {\n  state = {\n    musicsInfo: [],\n    musics: [],\n    isLoading: true,\n    favoriteSongs: [],\n  }\n\n  componentDidMount = async () => {\n    const { match } = this.props;\n    const idAlbum = match.params.id;\n    const result = await getMusics(idAlbum);\n    // console.log(result[0].wrapperType);\n    const musicsInfo = result[0];\n    const musics = result.filter((music, i) => i > 0);\n    // console.log(musics);\n    // console.log(musicsInfo);\n    const favorites = await getFavoriteSongs();\n    console.log(favorites);\n    const favoriteSongs = favorites;\n    this.setState({ musicsInfo, musics, favoriteSongs, isLoading: false });\n  }\n\n  render() {\n    const { musics, isLoading, musicsInfo, favoriteSongs } = this.state;\n    const musicsWithFavorite = musics.map((music) => {\n      const temFavorita = favoriteSongs.some((song) => music.trackId === song.trackId);\n      return {\n        ...music, favorita: temFavorita,\n      };\n    });\n    console.log(musicsWithFavorite);\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { isLoading ? <Carregando />\n          : (\n            <>\n              <h1 data-testid=\"artist-name\">\n                { musicsInfo.artistName }\n              </h1>\n              <p data-testid=\"album-name\">\n                { musicsInfo.collectionName }\n              </p>\n              {/* { musics.filter((music) => (music.wrapperType === 'track')).map((music) => (\n                <div key={ music.trackId }>\n                  <MusicCard\n                    trackName={ music.trackName }\n                    previewUrl={ music.previewUrl }\n                  />\n                </div>\n              )) } */}\n              { musicsWithFavorite.map((music) => (\n                <div key={ music.trackId }>\n                  <MusicCard\n                    trackName={ music.trackName }\n                    previewUrl={ music.previewUrl }\n                    trackId={ music.trackId }\n                    objeto={ music }\n                    favorita={ music.favorita }\n                  />\n                </div>\n              )) }\n            </>\n          ) }\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Carregando from './Carregando';\n\nclass Favorites extends React.Component {\n  state = {\n    isLoading: false,\n    favoriteSongs: [],\n  }\n\n  componentDidMount = async () => {\n    this.setState({ isLoading: true });\n    const favorites = await getFavoriteSongs();\n    const favoriteSongsComFavTrue = favorites.map((music) => ({\n      ...music, favorita: 'true',\n    }));\n    this.setState({ favoriteSongs: favoriteSongsComFavTrue,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const { isLoading, favoriteSongs } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        Favorites\n        { isLoading ? <Carregando />\n          : (\n            favoriteSongs.map((music) => (\n              <div key={ music.trackId }>\n                <MusicCard\n                  trackName={ music.trackName }\n                  previewUrl={ music.previewUrl }\n                  trackId={ music.trackId }\n                  objeto={ music }\n                  removeFromFavorite=\"removeFavorite\"\n                />\n              </div>\n            ))\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Carregando from './Carregando';\n\nclass Login extends React.Component {\n    state ={\n      inputName: '',\n      isSaveButtonDisabled: true,\n      isLoading: false,\n      isLoggedIn: false,\n    }\n\nvalidate = () => {\n  const { inputName } = this.state;\n  if (inputName.length > 2) {\n    this.setState({ isSaveButtonDisabled: false });\n  } else {\n    this.setState({ isSaveButtonDisabled: true });\n  }\n}\n\n    onInputChange = (event) => {\n      const { target } = event;\n      this.setState({\n        [target.name]: target.value,\n      }, () => this.validate());\n    }\n\n   handleClick = async () => {\n     const { inputName } = this.state;\n     this.setState({ isLoading: true });\n     await createUser({ name: inputName });\n     this.setState({ isLoggedIn: true });\n   }\n\n   render() {\n     const { isSaveButtonDisabled, inputName, isLoading, isLoggedIn } = this.state;\n     return (\n       <div data-testid=\"page-login\">\n         { isLoading\n           ? <Carregando />\n           : (\n             <div>\n               <label htmlFor=\"inputName\">\n                 Insira seu nome de usuário:\n                 <input\n                   type=\"text\"\n                   data-testid=\"login-name-input\"\n                   name=\"inputName\"\n                   id=\"inputName\"\n                   value={ inputName }\n                   onChange={ this.onInputChange }\n                 />\n               </label>\n               <button\n                 type=\"submit\"\n                 data-testid=\"login-submit-button\"\n                 disabled={ isSaveButtonDisabled }\n                 onClick={ this.handleClick }\n               >\n                 Entrar\n               </button>\n             </div>\n           )}\n         { isLoggedIn && <Redirect to=\"/search\" /> }\n       </div>\n     );\n   }\n}\n\nexport default Login;\n","import React from 'react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        NotFound: página não encontrada.\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUser } from '../services/userAPI';\nimport Carregando from './Carregando';\n\nclass Profile extends React.Component {\n  state = {\n    userName: '',\n    userEmail: '',\n    userDescription: '',\n    userImg: '',\n    isLoading: true,\n  }\n\n  componentDidMount = async () => {\n    const result = await getUser();\n    console.log(result);\n    this.setState({\n      userName: result.name,\n      userEmail: result.email,\n      userDescription: result.description,\n      userImg: result.image,\n    });\n    this.setState({ isLoading: false });\n  };\n\n  render() {\n    const { isLoading, userName, userEmail, userDescription, userImg } = this.state;\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        { isLoading\n          ? <Carregando />\n          : (\n            <div>\n              <p>{ userName }</p>\n              <p>{ userEmail }</p>\n              <p>{ userDescription }</p>\n              <img data-testid=\"profile-image\" src={ userImg } alt={ userName } />\n              <Link to=\"/profile/edit\">Editar perfil</Link>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\n// import { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { updateUser, getUser } from '../services/userAPI';\nimport Carregando from './Carregando';\n\nclass ProfileEdit extends React.Component {\n  state = {\n    userName: '',\n    userEmail: '',\n    userDescription: '',\n    userImg: '',\n    isLoading: false,\n    isSavebuttonDisabled: true,\n    // redirect: false,\n  }\n\n  componentDidMount = () => {\n    this.resgatandoInfoUsuarios();\n    if (userName.length !== 0\n      && userEmail.length !== 0\n      && userImg.length !== 0\n      && userDescription.length !== 0\n    ) {\n      this.setState({ isSavebuttonDisabled: false });\n    } else {\n      this.setState({ isSavebuttonDisabled: true });\n    }\n  };\n\nresgatandoInfoUsuarios = async () => {\n  this.setState({ isLoading: true });\n  const result = await getUser();\n  this.setState({ isLoading: false });\n  // console.log(result);\n  this.setState({\n    userName: result.name,\n    userEmail: result.email,\n    userDescription: result.description,\n    userImg: result.image,\n  });\n}\n\n  onInputChange = (event) => {\n    const { target: { id, value } } = event;\n    this.setState({\n      [id]: value,\n    });\n    const { userName, userEmail, userDescription, userImg } = this.state;\n    // console.log(userName);\n    if (userName.length !== 0\n      && userEmail.length !== 0\n      && userImg.length !== 0\n      && userDescription.length !== 0\n    ) {\n      this.setState({ isSavebuttonDisabled: false });\n    } else {\n      this.setState({ isSavebuttonDisabled: true });\n    }\n  }\n\n  // goBackToProfile = () => {\n  //   const { history } = this.props;\n  //   history.push('/profile');\n  // }\n\n  handleClick = async () => {\n    const { userName, userEmail, userDescription, userImg } = this.state;\n    const objeto = {\n      name: userName,\n      email: userEmail,\n      image: userImg,\n      description: userDescription,\n    };\n    console.log('clicou');\n    const { history } = this.props;\n    history.push('/profile');\n    await updateUser(objeto);\n    // this.setState({\n    // redirect: true,\n    // isLoading: false });\n  }\n\n  render() {\n    const {\n      isLoading,\n      userName,\n      userEmail,\n      userDescription,\n      userImg,\n      isSavebuttonDisabled,\n      // redirect,\n    } = this.state;\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        {/* { redirect && <Redirect to=\"/profile\" />} */}\n        <p>Profile Edit</p>\n        { isLoading ? <Carregando /> : null }\n        {/* { isLoading && <Carregando />} */}\n        <div>\n          <h1>Formulário para editar perfil:</h1>\n          <form>\n            <label htmlFor=\"userName\">\n              Alterar nome de usuário:\n              <input\n                type=\"text\"\n                data-testid=\"edit-input-name\"\n                name=\"userName\"\n                id=\"userName\"\n                value={ userName }\n                onChange={ this.onInputChange }\n              />\n            </label>\n            <label htmlFor=\"userEmail\">\n              Altere seu email:\n              <input\n                type=\"email\"\n                data-testid=\"edit-input-email\"\n                name=\"userEmail\"\n                id=\"userEmail\"\n                value={ userEmail }\n                onChange={ this.onInputChange }\n              />\n            </label>\n            <label htmlFor=\"userDescription\">\n              Altere sua descrição:\n              <input\n                type=\"text\"\n                data-testid=\"edit-input-description\"\n                name=\"userDescription\"\n                id=\"userDescription\"\n                value={ userDescription }\n                onChange={ this.onInputChange }\n              />\n            </label>\n            <label htmlFor=\"userImg\">\n              Altere sua foto:\n              <input\n                type=\"text\"\n                data-testid=\"edit-input-image\"\n                name=\"userImg\"\n                id=\"userImg\"\n                value={ userImg }\n                onChange={ this.onInputChange }\n              />\n            </label>\n            <button\n              type=\"submit\"\n              data-testid=\"edit-button-save\"\n              disabled={ isSavebuttonDisabled }\n              onClick={ this.handleClick }\n            >\n              Salvar\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfileEdit.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass Card extends React.Component {\n  render() {\n    const { name, imgUrl, collectionName, collectionId } = this.props;\n    return (\n      <article>\n        <Link\n          to={ `/album/${collectionId}` }\n          data-testid={ `link-to-album-${collectionId}` }\n        >\n          <img alt={ name } src={ imgUrl } />\n          <h2>{name}</h2>\n          <p>{collectionId}</p>\n          <p>{collectionName}</p>\n        </Link>\n      </article>\n    );\n  }\n}\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  collectionName: PropTypes.string.isRequired,\n  collectionId: PropTypes.number.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport Header from '../components/Header';\nimport Carregando from './Carregando';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Card from '../components/Card';\n\nclass Search extends React.Component {\n  state ={\n    searchArtist: '',\n    isSaveButtonDisabled: true,\n    isLoading: false,\n    resultsAlbuns: [],\n  }\n\nvalidate = () => {\n  const { searchArtist } = this.state;\n  if (searchArtist.length > 1) {\n    this.setState({ isSaveButtonDisabled: false });\n  } else {\n    this.setState({ isSaveButtonDisabled: true });\n  }\n}\n\n  onInputChange = (event) => {\n    const { target } = event;\n    this.setState({\n      [target.name]: target.value,\n    }, () => this.validate());\n  }\n\n  handleShowAlbuns = () => {\n    const { searchArtist } = this.state;\n    this.setState((prev) => ({\n      isLoading: true,\n      copySearchArtist: prev.searchArtist,\n    }), async () => {\n      const result = await searchAlbumsAPI(searchArtist);\n      this.setState({\n        resultsAlbuns: result,\n      }, () => {\n        this.setState({\n          isLoading: false,\n          searchArtist: '',\n        });\n      });\n    });\n  };\n\n  render() {\n    const {\n      searchArtist,\n      isSaveButtonDisabled,\n      isLoading,\n      resultsAlbuns,\n      copySearchArtist } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        <div>\n          <label htmlFor=\"searchArtist\">\n            Digite o nome da banda ou artista:\n            <input\n              type=\"text\"\n              data-testid=\"search-artist-input\"\n              name=\"searchArtist\"\n              id=\"searchArtist\"\n              value={ searchArtist }\n              onChange={ this.onInputChange }\n            />\n          </label>\n          <button\n            type=\"submit\"\n            data-testid=\"search-artist-button\"\n            disabled={ isSaveButtonDisabled }\n            onClick={ this.handleShowAlbuns }\n          >\n            Pesquisar\n          </button>\n        </div>\n        { isLoading && <Carregando />}\n        { !!resultsAlbuns.length\n        && (\n          <>\n            <p>\n              {`Resultado de álbuns de: ${copySearchArtist}`}\n            </p>\n            { resultsAlbuns.map((album) => (\n              <div key={ album.collectionId }>\n                <Card\n                  name={ album.artistName }\n                  imgUrl={ album.artworkUrl100 }\n                  collectionName={ album.collectionName }\n                  collectionId={ album.collectionId }\n                />\n              </div>\n            )) }\n          </>\n        )}\n        { resultsAlbuns.length === 0\n        && (\n          <p> Nenhum álbum foi encontrado </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/search\" component={ Search } />\n          <Route exact path=\"/album/:id\" component={ Album } />\n          <Route exact path=\"/favorites\" component={ Favorites } />\n          <Route exact path=\"/profile/edit\" component={ ProfileEdit } />\n          <Route exact path=\"/profile\" component={ Profile } />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}